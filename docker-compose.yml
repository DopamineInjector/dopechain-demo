services:
  postgresql:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: wallets
    networks:
      - dope-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d wallets"]
      interval: 10s
      timeout: 5s
      retries: 5

  backenddb:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: dopaminatorDb
    networks:
      - dope-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d dopaminatorDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./dopaminator-backend
    depends_on:
      backenddb:
        condition: service_healthy
    networks:
      - dope-net
    environment: 
      - ConnectionStrings__DefaultConnection=Host=backenddb;Port=5432;Database=dopaminatorDb;Username=admin;Password=admin
      - Blockchain__URL=http://bloccy:80
    ports:
      - "5264:8080"

  frontend:
    build: ./dopaminator-frontend
    restart: always
    ports:
      - "8080:80"

  meta-server:
    build: ./dope-meta-server
    restart: always
    environment:
      PORT: 80
      STORAGE_PATH: "/data/"
    networks:
      - dope-net

  db:
    build: ./dope-db
    restart: always
    networks: 
      - dope-net

  bloccy:
    build: ./dope-bloccy
    restart: always
    networks: 
      - dope-net
    depends_on:
      postgresql:
        condition: service_healthy

  bootstrap:
    build: ./dope-bootstrap
    restart: always
    networks:
      - dope-net

  dope-node:
    build: 
      dockerfile: ./node.Dockerfile
      context: .
    restart: always
    networks:
      - dope-net

networks:
  dope-net:
